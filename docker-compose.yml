services:
  database:
    image: postgres:13
    container_name: postgres_db
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    volumes:
      - dbdata:/var/lib/postgresql/data
    ports:
      - "5435:5432"       # Se expone el puerto de PostgreSQL
    networks:
      - app_network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 5s
      timeout: 5s
      retries: 10

  backend:
    build:
      context: ./taskcurso
      dockerfile: ../docker/backend/Dockerfile
    container_name: laravel_backend
    command: sh -c "chown -R www-data:www-data /var/www/html/storage /var/www/html/bootstrap/cache && apache2-foreground"
    volumes:
      - ./taskcurso:/var/www/html
    ports:
      - "8000:80"
    depends_on:
      database:
        condition: service_healthy
    environment:
      APP_ENV: ${APP_ENV}
      APP_DEBUG: ${APP_DEBUG}
      APP_URL: "http://solstoredev.duckdns.org"
      DB_CONNECTION: pgsql
      DB_HOST: database
      DB_PORT: 5432
      DB_DATABASE: ${POSTGRES_DB}
      DB_USERNAME: ${POSTGRES_USER}
      DB_PASSWORD: ${POSTGRES_PASSWORD}
      CLOUDINARY_URL: ${CLOUDINARY_URL}
      CLOUDINARY_CLOUD_NAME: ${CLOUDINARY_CLOUD_NAME}
      CLOUDINARY_API_KEY: ${CLOUDINARY_API_KEY}
      CLOUDINARY_API_SECRET: ${CLOUDINARY_API_SECRET}
    networks:
      - app_network
    expose:
      - "80"  #Solo para la red interna

  nginx:                                                                                                                                                                            
    image: nginx:alpine                                                                                                                                                             
    container_name: nginx_proxy                                                                                                                                                     
    ports:                                                                                                                                                                          
      - "80:80"           # Nginx escucha en el puerto 80                                                                                                                           
    volumes:                                                                                                                                                                        
      - ./docker/nginx/default.conf:/etc/nginx/conf.d/default.conf:ro   
      - ./front-vue/dist:/usr/share/nginx/html:ro   # ← build estático        
    depends_on:                                                                                                                                                                     
      backend:                                                                                                                                                                      
        condition: service_started
      frontend:
        condition: service_started        
    networks:                                                                                                                                                                       
      - app_network 


  frontend:
    build:
      context: ./front-vue
      dockerfile: ../docker/frontend/Dockerfile
    container_name: vue_frontend
    volumes:
      - ./front-vue:/app
      - /app/node_modules
    environment:
      VITE_API_BASE_URL: /api
        #ports:
        #- "5173:5173"
    depends_on:
      backend:
        condition: service_started
    networks:
      - app_network
    command: sh -c "npm run dev -- --host"


networks:
  app_network:
    name: sol-store-ecommerce_app_network
    driver: bridge

volumes:
  dbdata:
    name: sol-store-ecommerce_data
