name: CI - Backend (completo)
on:
  push:
    branches-ignore: [ "develop", "production" ]
  pull_request:

jobs:
  backend-tests-full:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Build backend image with latest Dockerfile
        run: docker compose build --no-cache backend

      - name: Levantar servicios backend y DB
        run: docker compose up -d database backend

      - name: Wait for backend to be ready
        run: sleep 15

      - name: Verify container is running
        run: docker compose ps

      - name: Check available disk space
        run: df -h

      - name: Prepare Composer environment
        run: |
          docker compose exec -T backend mkdir -p /var/www/html/vendor
          docker compose exec -T backend mkdir -p /var/www/html/vendor/composer
          docker compose exec -T backend chown -R www-data:www-data /var/www/html
          docker compose exec -T backend chmod -R 775 /var/www/html

      - name: Verify SSL/TLS is enabled
        run: docker compose exec -T backend composer config --global disable-tls

      - name: Update and clean Composer
        run: |
          docker compose exec -T backend composer self-update
          docker compose exec -T backend composer clear-cache
          docker compose exec -T backend composer diagnose

      - name: Install dev dependencies for testing
        env:
          COMPOSER_MEMORY_LIMIT: -1
        run: |
          docker compose exec -T backend bash -c "
            COMPOSER_MEMORY_LIMIT=-1 composer install \
              --no-interaction \
              --prefer-dist \
              --no-progress \
              --optimize-autoloader
          "

      - name: Migrar y seedar entorno testing
        run: docker compose exec -T backend sh -lc "php artisan migrate:fresh --seed --env=testing"

      - name: Correr toda la suite de pruebas
        run: docker compose exec -T backend sh -lc "php artisan test --env=testing"

      - name: Logs si algo falla
        if: failure()
        run: docker compose logs --tail=200
