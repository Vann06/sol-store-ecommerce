import { test, expect } from '@playwright/test';

test.describe('SOL Store - Navegaci√≥n y Responsividad E2E', () => {
  
  test('Navegaci√≥n desktop completa', async ({ page }) => {
    console.log('üß≠ Probando navegaci√≥n desktop...');
    
    await page.goto('/');
    
    // Verificar elementos del header
    await expect(page.locator('img[alt*="Logo"]')).toBeVisible();
    await expect(page.locator('input[placeholder*="Buscar"]')).toBeVisible();
    
    // Navegar por las p√°ginas principales
    const pages = [
      { link: 'Sobre Nosotros', url: '/about' },
      { link: 'FAQ', url: '/faq' },
      { link: 'Carrito', url: '/cart' }
    ];
    
    for (const { link, url } of pages) {
      await page.click(`text=${link}`);
      await expect(page).toHaveURL(url);
      console.log(`‚úÖ Navegaci√≥n a ${link} exitosa`);
    }
    
    // Verificar footer
    await expect(page.locator('text=derechos reservados')).toBeVisible();
    
    console.log('üéâ Navegaci√≥n desktop completa exitosa');
  });

  test('Responsividad m√≥vil', async ({ page }) => {
    console.log('üì± Probando responsividad m√≥vil...');
    
    // Cambiar a viewport m√≥vil
    await page.setViewportSize({ width: 375, height: 667 });
    await page.goto('/');
    
    // Verificar que el contenido se adapta
    const header = page.locator('header');
    await expect(header).toBeVisible();
    
    // En m√≥vil, podr√≠a haber un men√∫ hamburguesa
    const menuButton = page.locator('[data-testid="mobile-menu"], .menu-toggle, .hamburger');
    
    if (await menuButton.isVisible()) {
      await menuButton.click();
      console.log('‚úÖ Men√∫ m√≥vil desplegado');
    }
    
    console.log('‚úÖ Responsividad m√≥vil verificada');
  });

  test('Rendimiento y carga de p√°gina', async ({ page }) => {
    console.log('‚ö° Probando rendimiento...');
    
    const startTime = Date.now();
    await page.goto('/');
    const loadTime = Date.now() - startTime;
    
    // La p√°gina deber√≠a cargar en menos de 5 segundos
    expect(loadTime).toBeLessThan(5000);
    
    // Verificar que los elementos cr√≠ticos est√°n presentes
    await expect(page.locator('header')).toBeVisible();
    await expect(page.locator('main, .main-content')).toBeVisible();
    await expect(page.locator('footer')).toBeVisible();
    
    console.log(`‚úÖ P√°gina cargada en ${loadTime}ms`);
  });
});